@book{aboutorabiPerformanceEvaluationSQL2015,
  title = {Performance Evaluation of {{SQL}} and {{MongoDB}} Databases for Big E-Commerce Data},
  author = {Aboutorabi, Seyyed and Rezapour, Mohammad Mahdi and Moradi, Milad and Ghadiri, Nasser},
  date = {2015-08-19},
  doi = {10.1109/CSICSSE.2015.7369245},
  abstract = {With the advent of big data phenomenon in the world of data and its related technologies, the developments on the NoSQL databases are highly regarded. It has been claimed that these databases outperform their SQL counterparts. The aim of this study is to investigate the claim by evaluating the document-oriented MongoDB database with SQL in terms of the performance of common aggregated and non-aggregate queries. We designed a set of experiments with a huge number of operations such as read, write, delete, and select from various aspects in the two databases and on the same data for a typical e-commerce schema. The results show that MongoDB performs better for most operations excluding some aggregate functions. The results can be a good source for commercial and non-commercial companies eager to change the structure of the database used to provide their line-of-business services.},
  file = {/home/mrettig/Zotero/storage/YQPTRN5A/Aboutorabi et al. - 2015 - Performance evaluation of SQL and MongoDB databases for big e-commerce data.pdf}
}

@article{chenBigDataSurvey2014,
  title = {Big {{Data}}: {{A Survey}}},
  shorttitle = {Big {{Data}}},
  author = {Chen, Min and Mao, Shiwen and Liu, Yunhao},
  date = {2014-04-01},
  journaltitle = {Mobile Networks and Applications},
  shortjournal = {Mobile Netw Appl},
  volume = {19},
  number = {2},
  pages = {171--209},
  issn = {1572-8153},
  doi = {10.1007/s11036-013-0489-0},
  url = {https://doi.org/10.1007/s11036-013-0489-0},
  urldate = {2025-02-26},
  abstract = {In this paper, we review the background and state-of-the-art of big data. We first introduce the general background of big data and review related technologies, such as could computing, Internet of Things, data centers, and Hadoop. We then focus on the four phases of the value chain of big data, i.e., data generation, data acquisition, data storage, and data analysis. For each phase, we introduce the general background, discuss the technical challenges, and review the latest advances. We finally examine the several representative applications of big data, including enterprise management, Internet of Things, online social networks, medial applications, collective intelligence, and smart grid. These discussions aim to provide a comprehensive overview and big-picture to readers of this exciting area. This survey is concluded with a discussion of open problems and future directions.},
  langid = {english},
  keywords = {Big data,Big data analysis,Cloud computing,Data center,Hadoop,Internet of things,Smart grid},
  file = {/home/mrettig/Zotero/storage/Y9YRVL7I/Chen et al. - 2014 - Big Data A Survey.pdf}
}

@article{coddRelationalModelData1970,
  title = {A Relational Model of Data for Large Shared Data Banks},
  author = {Codd, E. F.},
  date = {1970-06-01},
  journaltitle = {Commun. ACM},
  volume = {13},
  number = {6},
  pages = {377--387},
  issn = {0001-0782},
  doi = {10.1145/362384.362685},
  url = {https://dl.acm.org/doi/10.1145/362384.362685},
  urldate = {2025-02-27},
  abstract = {Future users of large data banks must be protected from having to know how the data is organized in the machine (the internal representation). A prompting service which supplies such information is not a satisfactory solution. Activities of users at terminals and most application programs should remain unaffected when the internal representation of data is changed and even when some aspects of the external representation are changed. Changes in data representation will often be needed as a result of changes in query, update, and report traffic and natural growth in the types of stored information.Existing noninferential, formatted data systems provide users with tree-structured files or slightly more general network models of the data. In Section 1, inadequacies of these models are discussed. A model based on n-ary relations, a normal form for data base relations, and the concept of a universal data sublanguage are introduced. In Section 2, certain operations on relations (other than logical inference) are discussed and applied to the problems of redundancy and consistency in the user's model.},
  file = {/home/mrettig/Zotero/storage/JQN2344W/Codd - 1970 - A relational model of data for large shared data banks.pdf}
}

@unpublished{dertingerNoSQLDatenbankenUndNichtrelationale2024,
  type = {Vorlesung},
  title = {{{NoSQL-Datenbanken}} Und {{Nicht-relationale Datenbanken}}},
  author = {Dertinger, Maria},
  date = {2024},
  eventtitle = {Advanced {{Database Technology}}},
  venue = {DHBW Karlsruhe},
  file = {/home/mrettig/Zotero/storage/I7KZ3KCK/Kap. 2 NoSQL-Datenbanken und Nicht-relationale Datenbanken.pdf}
}

@book{donofrioBigDataAnalytics2021,
  title = {Big Data Analytics: Grundlagen, Fallbeispiele und Nutzungspotenziale},
  shorttitle = {Big Data Analytics},
  editor = {D'Onofrio, Sara and Meier, Andreas},
  date = {2021},
  series = {Edition HMD},
  publisher = {Springer Fachmedien Wiesbaden},
  location = {Wiesbaden},
  doi = {10.1007/978-3-658-32236-6},
  url = {https://link.springer.com/10.1007/978-3-658-32236-6},
  urldate = {2025-02-15},
  isbn = {978-3-658-32235-9 978-3-658-32236-6},
  langid = {ngerman},
  file = {/home/mrettig/Zotero/storage/RWC4C4HZ/D'Onofrio und Meier - 2021 - Big Data Analytics Grundlagen, Fallbeispiele und Nutzungspotenziale.pdf}
}

@book{harrisonNextGenerationDatabases2015,
  title = {Next {{Generation Databases}}},
  author = {Harrison, Guy},
  date = {2015},
  publisher = {Apress},
  location = {Berkeley, CA},
  doi = {10.1007/978-1-4842-1329-2},
  url = {http://link.springer.com/10.1007/978-1-4842-1329-2},
  urldate = {2025-03-02},
  isbn = {978-1-4842-1330-8 978-1-4842-1329-2},
  langid = {english},
  keywords = {Big Data,Databases,enterprise architecture,NoSQL,relational database},
  file = {/home/mrettig/Zotero/storage/2TV4C6PN/Harrison - 2015 - Next Generation Databases.pdf}
}

@online{ibmredaktionWasIstNoSQLDatenbank2022,
  title = {Was ist eine NoSQL-Datenbank? | IBM},
  shorttitle = {Was ist eine NoSQL-Datenbank?},
  author = {{IBM Redaktion}},
  date = {2022-12-12T00:00:00.000},
  url = {https://www.ibm.com/de-de/think/topics/nosql-databases},
  urldate = {2025-02-25},
  abstract = {NoSQL ist ein Ansatz für das Datenbankdesign, der die Speicherung und Abfrage von Daten außerhalb der traditionellen Strukturen relationaler Datenbanken ermöglicht.},
  langid = {ngerman},
  file = {/home/mrettig/Zotero/storage/8F7B6NTE/nosql-databases.html}
}

@inproceedings{kepnerAssociativeArrayModel2016,
  title = {Associative Array Model of {{SQL}}, {{NoSQL}}, and {{NewSQL}} Databases},
  booktitle = {2016 {{IEEE High Performance Extreme Computing Conference}} ({{HPEC}})},
  author = {Kepner, Jeremy and Gadepally, Vijay and Hutchison, Dylan and Jananthan, Hayden and Mattson, Timothy and Samsi, Siddharth and Reuther, Albert},
  date = {2016-09},
  pages = {1--9},
  publisher = {IEEE},
  location = {Waltham, MA, USA},
  doi = {10.1109/HPEC.2016.7761647},
  url = {http://ieeexplore.ieee.org/document/7761647/},
  urldate = {2025-02-24},
  abstract = {The success of SQL, NoSQL, and NewSQL databases is a reflection of their ability to provide significant functionality and performance benefits for specific domains, such as financial transactions, internet search, and data analysis. The BigDAWG polystore seeks to provide a mechanism to allow applications to transparently achieve the benefits of diverse databases while insulating applications from the details of these databases. Associative arrays provide a common approach to the mathematics found in different databases: sets (SQL), graphs (NoSQL), and matrices (NewSQL). This work presents the SQL relational model in terms of associative arrays and identifies the key mathematical properties that are preserved within SQL. These properties include associativity, commutativity, distributivity, identities, annihilators, and inverses. Performance measurements on distributivity and associativity show the impact these properties can have on associative array operations. These results demonstrate that associative arrays could provide a mathematical model for polystores to optimize the exchange of data and execution queries.},
  eventtitle = {2016 {{IEEE High Performance Extreme Computing Conference}} ({{HPEC}})},
  isbn = {978-1-5090-3525-0},
  langid = {english},
  file = {/home/mrettig/Zotero/storage/TWW4BA45/Kepner et al. - 2016 - Associative array model of SQL, NoSQL, and NewSQL databases.pdf}
}

@article{leeAlternativesRelationalDatabase2013,
  title = {Alternatives to Relational Database: {{Comparison}} of {{NoSQL}} and {{XML}} Approaches for Clinical Data Storage},
  shorttitle = {Alternatives to Relational Database},
  author = {Lee, Ken Ka-Yin and Tang, Wai-Choi and Choi, Kup-Sze},
  date = {2013-04},
  journaltitle = {Computer Methods and Programs in Biomedicine},
  shortjournal = {Computer Methods and Programs in Biomedicine},
  volume = {110},
  number = {1},
  pages = {99--109},
  issn = {01692607},
  doi = {10.1016/j.cmpb.2012.10.018},
  url = {https://linkinghub.elsevier.com/retrieve/pii/S0169260712002805},
  urldate = {2025-02-24},
  abstract = {Clinical data are dynamic in nature, often arranged hierarchically and stored as free text and numbers. Effective management of clinical data and the transformation of the data into structured format for data analysis are therefore challenging issues in electronic health records development. Despite the popularity of relational databases, the scalability of the NoSQL database model and the document-centric data structure of XML databases appear to be promising features for effective clinical data management. In this paper, three database approaches – NoSQL, XML-enabled and native XML – are investigated to evaluate their suitability for structured clinical data. The database query performance is reported, together with our experience in the databases development. The results show that NoSQL database is the best choice for query speed, whereas XML databases are advantageous in terms of scalability, flexibility and extensibility, which are essential to cope with the characteristics of clinical data. While NoSQL and XML technologies are relatively new compared to the conventional relational database, both of them demonstrate potential to become a key database technology for clinical data management as the technology further advances.},
  langid = {english},
  file = {/home/mrettig/Zotero/storage/YN8GZCRB/Lee et al. - 2013 - Alternatives to relational database Comparison of NoSQL and XML approaches for clinical data storag.pdf}
}

@book{meierWerkzeugeDigitalenWirtschaft2018,
  title = {Werkzeuge der digitalen Wirtschaft: Big Data, NoSQL \& Co.},
  shorttitle = {Werkzeuge der digitalen Wirtschaft},
  author = {Meier, Andreas},
  date = {2018},
  series = {essentials},
  publisher = {Springer Fachmedien Wiesbaden},
  location = {Wiesbaden},
  doi = {10.1007/978-3-658-20337-5},
  url = {http://link.springer.com/10.1007/978-3-658-20337-5},
  urldate = {2025-02-24},
  isbn = {978-3-658-20336-8 978-3-658-20337-5},
  langid = {ngerman},
  file = {/home/mrettig/Zotero/storage/K2FW2MWP/Meier - 2018 - Werkzeuge der digitalen Wirtschaft Big Data, NoSQL & Co..pdf}
}

@online{newardVietnamComputerScience2006,
  title = {The {{Vietnam}} of {{Computer Science}}},
  author = {Neward, Ted},
  date = {2006-06-26},
  url = {http://blogs.newardassociates.com/blog/2006/the-vietnam-of-computer-science.html},
  urldate = {2025-03-02},
  organization = {Neward \& Associates LLC},
  file = {/home/mrettig/Zotero/storage/8DHESZ4P/the-vietnam-of-computer-science.html}
}

@online{NewSQLWirtschaftsinformatikWiki,
  title = {{{NewSQL}} [{{Wirtschaftsinformatik Wiki}} - {{Kewee}}]},
  url = {https://wi-wiki.de/doku.php?id=bigdata:newsql#vergleich_oldsql_nosql_und_newsql},
  urldate = {2025-02-25},
  file = {/home/mrettig/Zotero/storage/68FJRXJW/doku.html}
}

@article{phiriComparativeStudyNoSQL2017,
  title = {A {{Comparative Study}} of {{NoSQL}} and {{Relational Database}}},
  author = {Phiri, Mr Hazael and Kunda, Dr Douglas},
  date = {2017},
  volume = {1},
  number = {1},
  abstract = {Relational Database and NoSQL are competing types of database models. The former has been in existence since 1979 and the latter since the year 2000. The demands of modern applications especially in web 2.0, 3.0 and big data have made NoSQL a popular database of choice. Choosing an appropriate database model to use is an important decision that developers must make based on the features of a given database model. This paper compares the features of Relational Databases and NoSQL to establish which database is better at supporting demands of modern applications. The paper also brings out the challenges of NoSQL. Finally, the paper concludes by determining whether Relational Databases would completely be replaced by NoSQL database models. The findings revealed that, Relational Databases are based on ACID model which emphasizes better consistency, security and offers a standard query language. However, Relational Databases have poor scalability, weak performance, cost more, face availability challenges when supporting large number of users and handle limited volume of data. NoSQL, on the other hand is based on the BASE model, which emphasizes greater scalability and provides a flexible schema, offers better performance, mostly open source, cheap but, lacks a standard query language and does not provide adequate security mechanisms. Both databases will continue to exist alongside each other with none being better than the other. The choice of the database to use will depend on the nature of the application being developed. Each database type has its own challenges and strengths, with relational database lacking of support for unstructured data while NoSQL lacks standardization and has poor security. Modern applications in web 2.0, 3.0 and big data are well suited to use NoSQL but, there are still many applications that rely on Relational Databases.},
  langid = {english},
  file = {/home/mrettig/Zotero/storage/ZBJ4ZGVQ/Phiri und Kunda - 2017 - A Comparative Study of NoSQL and Relational Database.pdf}
}

@online{redgatesoftwareltd.DBEnginesRanking2025,
  title = {DB-Engines Ranking},
  author = {{Red Gate Software Ltd.}},
  date = {2025-05-02},
  url = {https://db-engines.com/de/ranking},
  urldate = {2025-03-02},
  abstract = {Popularity ranking of database management systems.},
  langid = {ngerman},
  organization = {DB-Engines},
  file = {/home/mrettig/Zotero/storage/PT3DUM3L/ranking.html}
}

@article{sahatqijaComparisonRelationalNOSQL,
  title = {Comparison between Relational and {{NOSQL}} Databases},
  author = {Sahatqija, Kosovare and Ajdari, Jaumin and Zenuni, Xhemal and Raufi, Bujar and Ismaili, Florije},
  abstract = {The relational database is provided from the traditional DBMS, which ensures the integrity of data and consistency of transactions. For many software applications, these are the principles of a proper DBMS. But in the last few years, witnessing the velocity of data growth and the lack of support from traditional databases for this issue, as a solution to it, the NoSQL (Not Only SQL) databases have appeared. These two kinds while being used for the same purposes (create, retrieve, update and manage data) they both have their own advantages and disadvantages over each other. The purpose of this study is to try and compare the research question of what are the pros and cons for each of these database’ features and characteristics? This paper is a qualitative research, based on detailed and intensive analysis of the two database types, through use and comparison of some published materials during last few years.},
  langid = {english},
  file = {/home/mrettig/Zotero/storage/8KY77SAU/Sahatqija et al. - Comparison between relational and NOSQL databases.pdf}
}

@article{singhNoSQLNewHorizon,
  title = {{{NoSQL}} : {{A New Horizon}} in {{Big Data}}},
  author = {Singh, Amarbir},
  abstract = {This Big data is useful for data sets where their size or type is away from the capability of traditional relational databases for capturing, managing and processing the data with low-latency. Relational databases were not designed to cope with the scale and agility challenges that face modern applications, nor were they built to take advantage of the commodity storage and processing power available today. NoSQL encompasses a wide variety of different database technologies that were developed in response to the demands presented in building modern applications. In this paper collection of NoSQL database tools are illustrated and also compared with the salient features.},
  langid = {english},
  file = {/home/mrettig/Zotero/storage/3GPLIZQ7/Singh - NoSQL  A New Horizon in Big Data.pdf}
}

@incollection{uyangaComparativeStudyNoSQL2021,
  title = {A {{Comparative Study}} of {{NoSQL}} and {{Relational Database}}},
  booktitle = {Advances in {{Intelligent Information Hiding}} and {{Multimedia Signal Processing}}},
  author = {Uyanga, S. and Munkhtsetseg, N. and Batbayar, S. and Bat-Ulzii, Sh},
  editor = {Pan, Jeng-Shyang and Li, Jianpo and Ryu, Keun Ho and Meng, Zhenyu and Klasnja-Milicevic, Aleksandra},
  date = {2021},
  volume = {212},
  pages = {116--122},
  publisher = {Springer Singapore},
  location = {Singapore},
  doi = {10.1007/978-981-33-6757-9_16},
  url = {https://link.springer.com/10.1007/978-981-33-6757-9_16},
  urldate = {2025-02-15},
  isbn = {978-981-336-756-2 978-981-336-757-9},
  langid = {english},
  file = {/home/mrettig/Zotero/storage/JVZKY824/Uyanga et al. - 2021 - A Comparative Study of NoSQL and Relational Database.pdf}
}

@article{wangSQLVsNoSQL,
  title = {{{SQL}} vs {{NoSQL}}: {{A Performance Comparison}}},
  author = {Wang, Ruihan and Yang, Zongyan},
  abstract = {We always hear some statements like ‘SQL is outdated’, ‘This is the world of NoSQL’, ‘SQL is still used a lot by most of companies.’ Which one is accurate? Has NoSQL completely replace SQL? Or is NoSQL just a hype? SQL (Structured Query Language) is a standard query language for relational database management system. The most popular types of RDBMS(Relational Database Management Systems) like Oracle, MySQL, SQL Server, uses SQL as their standard database query language.[3] NoSQL means Not Only SQL, which is a collection of non-relational data storage systems. The important character of NoSQL is that it relaxes one or more of the ACID properties for a better performance in desired fields. Some of the NOSQL databases most companies using are Cassandra, CouchDB, Hadoop Hbase, MongoDB. In this paper, we’ll outline the general differences between the SQL and NoSQL, discuss if Relational Database Management Systems is a thing of past, and also compare the speed performance of SQL and NoSQL databases, such as BerkeleyDB, MongoDB and MySQL.},
  langid = {english},
  file = {/home/mrettig/Zotero/storage/P9EMSTQ5/Wang und Yang - SQL vs NoSQL A Performance Comparison.pdf}
}
